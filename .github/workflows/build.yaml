name: Build and test

on:
  push:
    branches: [ "**" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ master ]

env:
  GRADLE_ARGS: "--info --stacktrace"


jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [11]
    steps:
    - uses: actions/checkout@v2

    - name: Install libcurl
      run: |
        sudo apt-get -y --no-install-recommends install libcurl4 libcurl4-openssl-dev

    - name: Set up Java ${{ matrix.java-version }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java-version }}

    - name: Cache gradle wrapper
      uses: actions/cache@v2
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-wrapper

    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', 'buildSrc') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Run unit tests
      run: |
        set -eux
        ./gradlew check -x integ-tests:check $GRADLE_ARGS

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true

  integ-tests:
    needs: unit-tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [11]
        es-version: [6.8.18, 7.14.1]
    services:
      elasticsearch:
        image: elasticsearch:${{ matrix.es-version }}
        ports:
        - 9200:9200
        options: >-
          -e="discovery.type=single-node"
          --health-cmd="curl http://localhost:9200/_cluster/health"
          --health-interval=5s
          --health-timeout=2s
          --health-retries=10
    steps:
    - uses: actions/checkout@v2

    - name: Install libcurl
      run: |
        sudo apt-get -y --no-install-recommends install libcurl4 libcurl4-openssl-dev

    - name: Set up Java ${{ matrix.python-version }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java-version }}

    - name: Cache gradle wrapper
      uses: actions/cache@v2
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-wrapper

    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', 'buildSrc') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Run integration tests
      run: |
        set -eux
        # JS integration tests are not working at the moment
        ./gradlew :integ-tests:check -x :integ-tests:jsNodeTest $GRADLE_ARGS

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
