name: Build and test

on:
  push:
    branches:
    - master
    tags:
    - "v*"
  pull_request:
    branches:
    - master

env:
  GRADLE_ARGS: "--info --stacktrace"


jobs:
  unit-tests:
    if: |
      !contains(github.event.head_commit.message, '[skip tests]')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [11]
    steps:
    - uses: actions/checkout@v2

    - name: Install libcurl
      run: |
        sudo apt-get -y update
        sudo apt-get -y --no-install-recommends install libcurl4 libcurl4-openssl-dev

    - name: Set up Java ${{ matrix.java-version }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java-version }}

    ### Cache ###
    - name: Cache gradle wrapper
      uses: actions/cache@v2
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-wrapper-

    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle.kts', 'buildSrc') }}
        restore-keys: ${{ runner.os }}-gradle-caches-

    - name: Cache Kotlin Native
      uses: actions/cache@v2
      with:
        path: ~/.konan
        key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle.kts', 'buildSrc') }}
        restore-keys: ${{ runner.os }}-konan-
    ### End of cache ###

    ### Compile ###
    - name: Compile JVM
      run: |
        set -eux
        ./gradlew compileTestKotlinJvm $GRADLE_ARGS

    - name: Compile JS
      run: |
        set -eux
        ./gradlew compileTestKotlinJs $GRADLE_ARGS

    - name: Compile native
      run: |
        set -eux
        ./gradlew linkDebugTestNative $GRADLE_ARGS

    - name: Compile samples
      run: |
        set -eux
        ./gradlew compileKotlinJvm compileKotlinNative -p samples $GRADLE_ARGS
    ### End of compile ###

    ### Artifacts ###
    - name: Prepare build artifact
      run: |
        set -eux
        find . -type d -name build -print | xargs tar --zstd -cf build.tar.zstd .gradle

    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: Build
        path: build.tar.zstd
        retention-days: 1
    ### End of artifacts ###

    - name: Run linter
      run: |
        set -eux
        ./gradlew detekt $GRADLE_ARGS

    - name: Check ABI compatibility
      run: |
        set -eux
        ./gradlew apiCheck $GRADLE_ARGS

    - name: Run unit tests
      run: |
        set -eux
        ./gradlew allTests -x integ-tests:allTests $GRADLE_ARGS

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true

  integ-tests:
    if: |
      !contains(github.event.head_commit.message, '[skip tests]')
    needs: unit-tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [11]
        es-version: [6.8.23, 7.17.3, 8.1.2]
    steps:
    - uses: actions/checkout@v2

    - name: Start Elasticsearch
      run: |
        set -eux
        docker run -d \
          --name elasticsearch \
          -p 9200:9200 \
          -v $(pwd)/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml \
          -e "discovery.type=single-node" \
          -e "ES_JAVA_OPTS=-Xms128m -Xmx256m" \
          --health-cmd="curl http://localhost:9200/_cluster/health" \
          --health-interval=5s \
          --health-timeout=2s \
          --health-retries=10 \
          elasticsearch:${{ matrix.es-version }}

    - name: Install libcurl
      run: |
        sudo apt-get -y update
        sudo apt-get -y --no-install-recommends install libcurl4 libcurl4-openssl-dev

    - name: Set up Java ${{ matrix.python-version }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java-version }}

    ### Cache ###
    - name: Cache gradle wrapper
      uses: actions/cache@v2
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-wrapper-

    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle.kts', 'buildSrc') }}
        restore-keys: ${{ runner.os }}-gradle-caches-

    - name: Cache Kotlin Native
      uses: actions/cache@v2
      with:
        path: ~/.konan
        key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle.kts', 'buildSrc') }}
        restore-keys: ${{ runner.os }}-konan-
    ### End of cache ###

    ### Artifacts ###
    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: Build

    - name: Unpack build artifact
      run: |
        set -eux
        tar --zstd -xf build.tar.zstd
    ### End of artifacts ###

    - name: Run integration tests
      run: |
        set -eux
        ./gradlew :integ-tests:check $GRADLE_ARGS

    - name: Run samples JVM
      run: |
        set -eux
        ./gradlew run -p samples $GRADLE_ARGS

    - name: Run samples native
      run: |
        set -eux
        ./gradlew runDebugExecutableNative -p samples $GRADLE_ARGS

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true

  publish:
    if: |
      always() &&
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: integ-tests
    steps:
    - uses: actions/checkout@v2

    - name: Install libcurl
      run: |
        sudo apt-get -y update
        sudo apt-get -y --no-install-recommends install libcurl4 libcurl4-openssl-dev

    - name: Set up Java ${{ matrix.java-version }}
      uses: actions/setup-java@v1
      with:
        java-version: 11

    ### Cache ###
    - name: Cache gradle wrapper
      uses: actions/cache@v2
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-wrapper-

    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle.kts', 'buildSrc') }}
        restore-keys: ${{ runner.os }}-gradle-caches-

    - name: Cache Kotlin Native
      uses: actions/cache@v2
      with:
        path: ~/.konan
        key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle.kts', 'buildSrc') }}
        restore-keys: ${{ runner.os }}-konan
    ### End of cache ###

    ### Artifacts ###
    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: Build

    - name: Unpack build artifact
      run: |
        set -eux
        tar --zstd -xf build.tar.zstd
    ### End of artifacts ###

    - name: Prepare publishing
      run: |
        set -eux
        echo '${{ secrets.SIGNING_KEY_CONTENT }}' | base64 -d > signing.gpg

    - name: Publish
      if: |
        github.event_name == 'push' &&
        startsWith(github.ref, 'refs/tags/v')
      run: |
        set -eux
        ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository \
          $GRADLE_ARGS \
          -Psigning.secretKeyRingFile="$PWD/signing.gpg" \
          -Psigning.keyId='${{ secrets.SIGNING_KEY_ID }}' \
          -Psigning.password='${{ secrets.SIGNING_KEY_PASSPHRASE }}' \
          -PsonatypeUser='${{ secrets.SONATYPE_USER }}' \
          -PsonatypePassword='${{ secrets.SONATYPE_PASSWORD }}'

  cleanup:
    if: always()
    runs-on: ubuntu-latest
    needs: publish
    steps:
    - uses: geekyeggo/delete-artifact@v1
      with:
        name: Build
        failOnError: false
